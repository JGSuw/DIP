


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* TMS570.S: Startup file for Texas Instruments TMS570 
                       device series         */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2010 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ; The Startup code is executed after CPU Reset.
   15 00000000         
   16 00000000         
   17 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   18 00000000         
   19 00000000 00000010 
                       Mode_USR
                               EQU              0x0010
   20 00000000 00000011 
                       Mode_FIQ
                               EQU              0x0011
   21 00000000 00000012 
                       Mode_IRQ
                               EQU              0x0012
   22 00000000 00000013 
                       Mode_SVC
                               EQU              0x0013
   23 00000000 00000017 
                       Mode_ABT
                               EQU              0x0017
   24 00000000 0000001B 
                       Mode_UND
                               EQU              0x001B
   25 00000000 0000001F 
                       Mode_SYS
                               EQU              0x001F
   26 00000000         
   27 00000000 00000080 
                       I_Bit   EQU              0x0080      ; when I bit is set
                                                            , IRQ is disabled
   28 00000000 00000040 
                       F_Bit   EQU              0x0040      ; when F bit is set
                                                            , FIQ is disabled
   29 00000000 00000200 



ARM Macro Assembler    Page 2 


                       E_Bit   EQU              0x0200      ; when E bit is set
                                                            , data is big endia
                                                            n
   30 00000000         
   31 00000000         
   32 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   33 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   34 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   35 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   36 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   37 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   38 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   39 00000000         ;// </h>
   40 00000000         
   41 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   42 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   43 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   44 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   45 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   46 00000000 00001400 
                       USR_Stack_Size
                               EQU              0x00001400
   47 00000000         
   49 00000000 00000088 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   50 00000000         
   51 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   52 00000000         
   53 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   54 00001400         __initial_sp
                               SPACE            ISR_Stack_Size
   55 00001488         Stack_Top
   56 00001488         
   57 00001488         
   58 00001488         ;// <h> Heap Configuration
   59 00001488         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   60 00001488         ;// </h>
   61 00001488         
   62 00001488 00000000 
                       Heap_Size
                               EQU              0x00000000
   63 00001488         
   64 00001488                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3



ARM Macro Assembler    Page 3 


   65 00000000         __heap_base
   66 00000000         Heap_Mem
                               SPACE            Heap_Size
   67 00000000         __heap_limit
   68 00000000         
   69 00000000         ;----------------------- CODE --------------------------
                       ------------------------
   70 00000000         
   71 00000000                 PRESERVE8
   72 00000000         
   73 00000000         
   74 00000000         ; Area Definition and Entry Point
   75 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
   76 00000000         
   77 00000000                 AREA             RESET, CODE, READONLY
   78 00000000                 ARM
   79 00000000         
   80 00000000                 IF               :DEF:__RTX
   82                          ENDIF
   83 00000000         
   84 00000000         ; Exception Vectors
   85 00000000         ;  Mapped to Address 0.
   86 00000000         ;  Absolute addressing mode must be used.
   87 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
   88 00000000         
   89 00000000 E59FF018 
                       Vectors LDR              PC,Reset_Addr
   90 00000004 E59FF018        LDR              PC,Undef_Addr
   91 00000008 E59FF018        LDR              PC,SWI_Addr
   92 0000000C E59FF018        LDR              PC,PAbt_Addr
   93 00000010 E59FF018        LDR              PC,DAbt_Addr
   94 00000014 EAFFFFFE        B                .
   95 00000018 E51FF1B0        LDR              PC,[PC,#-0x1b0]
   96 0000001C E51FF1B0        LDR              PC,[PC,#-0x1b0]
   97 00000020         
   98 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
   99 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  100 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  101 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  102 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  103 00000034 00000000        DCD              0           ; Reserved Address
  104 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  105 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler



ARM Macro Assembler    Page 4 


  106 00000040         
  107 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  108 00000044                 IF               :LNOT::DEF:__RTX
  109 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  110 00000048                 ENDIF
  111 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  112 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  113 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  114 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  115 00000058         
  116 00000058         
  117 00000058         ; Reset Handler
  118 00000058         
  119 00000058                 EXPORT           Reset_Handler
  120 00000058         Reset_Handler
  121 00000058 EE110F50        MRC              p15,   #0x00, r0, c1, c0, #0x02
  122 0000005C E380060F        ORR              r0,    r0, #0xF00000
  123 00000060 EE010F50        MCR              p15,   #0x00, r0, c1, c0, #0x02
  124 00000064 E3A00101        MOV              r0,    #0x40000000
  125 00000068 EEE80A10        FMXR             fpexc, r0
  126 0000006C         
  127 0000006C E3A00000        MOV              r0,  #0x0000 ; Initialization o
                                                            f R4F core register
                                                            s
  128 00000070 E3A01000        MOV              r1,  #0x0000 ; necessary for lo
                                                            ck-step device
  129 00000074 E3A02000        MOV              r2,  #0x0000
  130 00000078 E3A03000        MOV              r3,  #0x0000
  131 0000007C E3A04000        MOV              r4,  #0x0000
  132 00000080 E3A05000        MOV              r5,  #0x0000
  133 00000084 E3A06000        MOV              r6,  #0x0000
  134 00000088 E3A07000        MOV              r7,  #0x0000
  135 0000008C E3A08000        MOV              r8,  #0x0000
  136 00000090 E3A09000        MOV              r9,  #0x0000
  137 00000094 E3A0A000        MOV              r10, #0x0000
  138 00000098 E3A0B000        MOV              r11, #0x0000
  139 0000009C E3A0C000        MOV              r12, #0x0000
  140 000000A0         
  141 000000A0 EC411B10        FMDRR            d0,  r1, r1 ; Initialization of
                                                             FPU registers
  142 000000A4 EC411B11        FMDRR            d1,  r1, r1
  143 000000A8 EC411B12        FMDRR            d2,  r1, r1
  144 000000AC EC411B13        FMDRR            d3,  r1, r1
  145 000000B0 EC411B14        FMDRR            d4,  r1, r1
  146 000000B4 EC411B15        FMDRR            d5,  r1, r1
  147 000000B8 EC411B16        FMDRR            d6,  r1, r1
  148 000000BC EC411B17        FMDRR            d7,  r1, r1



ARM Macro Assembler    Page 5 


  149 000000C0 EC411B18        FMDRR            d8,  r1, r1
  150 000000C4 EC411B19        FMDRR            d9,  r1, r1
  151 000000C8 EC411B1A        FMDRR            d10, r1, r1
  152 000000CC EC411B1B        FMDRR            d11, r1, r1
  153 000000D0 EC411B1C        FMDRR            d12, r1, r1
  154 000000D4 EC411B1D        FMDRR            d13, r1, r1
  155 000000D8 EC411B1E        FMDRR            d14, r1, r1
  156 000000DC EC411B1F        FMDRR            d15, r1, r1
  157 000000E0         
  158 000000E0 EBFFFFFF        BL               .+4         ; Initialization of
                                                             return stack
  159 000000E4 EBFFFFFF        BL               .+4
  160 000000E8 EBFFFFFF        BL               .+4
  161 000000EC EBFFFFFF        BL               .+4
  162 000000F0         
  163 000000F0         ; Setup Stack for each mode ----------------------------
                       ------------------------
  164 000000F0         
  165 000000F0 E59F00AC        LDR              R0, =Stack_Top
  166 000000F4         
  167 000000F4         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  168 000000F4 E30012DB        MOV              R1, #Mode_UND:OR:I_Bit:OR:F_Bit
:OR:E_Bit
  169 000000F8 E12FF001        MSR              CPSR_cxsf, R1
  170 000000FC E1A0D000        MOV              SP, R0
  171 00000100 E3A0E000        MOV              R14, #0x0000
  172 00000104 E16FF001        MSR              SPSR_cxsf, R1
  173 00000108 E2400000        SUB              R0, R0, #UND_Stack_Size
  174 0000010C         
  175 0000010C         ;  Enter Abort Mode and set its Stack Pointer
  176 0000010C E30012D7        MOV              R1, #Mode_ABT:OR:I_Bit:OR:F_Bit
:OR:E_Bit
  177 00000110 E12FF001        MSR              CPSR_cxsf, R1
  178 00000114 E1A0D000        MOV              SP, R0
  179 00000118 E3A0E000        MOV              R14, #0x0000
  180 0000011C E16FF001        MSR              SPSR_cxsf, R1
  181 00000120 E2400000        SUB              R0, R0, #ABT_Stack_Size
  182 00000124         
  183 00000124         ;  Enter FIQ Mode and set its Stack Pointer
  184 00000124 E30012D1        MOV              R1, #Mode_FIQ:OR:I_Bit:OR:F_Bit
:OR:E_Bit
  185 00000128 E12FF001        MSR              CPSR_cxsf, R1
  186 0000012C E1A0D000        MOV              SP, R0
  187 00000130 E3A08000        MOV              R8,  #0x0000
  188 00000134 E3A09000        MOV              R9,  #0x0000
  189 00000138 E3A0A000        MOV              R10, #0x0000
  190 0000013C E3A0B000        MOV              R11, #0x0000
  191 00000140 E3A0C000        MOV              R12, #0x0000
  192 00000144 E3A0E000        MOV              R14, #0x0000
  193 00000148 E16FF001        MSR              SPSR_cxsf, R1
  194 0000014C E2400000        SUB              R0, R0, #FIQ_Stack_Size
  195 00000150         
  196 00000150         ;  Enter IRQ Mode and set its Stack Pointer
  197 00000150 E30012D2        MOV              R1, #Mode_IRQ:OR:I_Bit:OR:F_Bit
:OR:E_Bit
  198 00000154 E12FF001        MSR              CPSR_cxsf, R1
  199 00000158 E1A0D000        MOV              SP, R0
  200 0000015C E3A0E000        MOV              R14, #0x0000



ARM Macro Assembler    Page 6 


  201 00000160 E16FF001        MSR              SPSR_cxsf, R1
  202 00000164 E2400080        SUB              R0, R0, #IRQ_Stack_Size
  203 00000168         
  204 00000168         ;  Enter Supervisor Mode and set its Stack Pointer
  205 00000168 E30012D3        MOV              R1, #Mode_SVC:OR:I_Bit:OR:F_Bit
:OR:E_Bit
  206 0000016C E12FF001        MSR              CPSR_cxsf, R1
  207 00000170 E1A0D000        MOV              SP, R0
  208 00000174 E3A0E000        MOV              R14, #0x0000
  209 00000178 E16FF001        MSR              SPSR_cxsf, R1
  210 0000017C E2400008        SUB              R0, R0, #SVC_Stack_Size
  211 00000180         
  212 00000180         ;  Enter User Mode and set its Stack Pointer
  213 00000180 E300121F        MOV              R1, #Mode_SYS:OR:E_Bit
  214 00000184 E12FF001        MSR              CPSR_cxsf, R1
  215 00000188 E3A0E000        MOV              R14, #0x0000
  216 0000018C         
  217 0000018C                 IF               :DEF:__MICROLIB
  222 0000018C         
  223 0000018C E1A0D000        MOV              SP, R0
  224 00000190 E24DAB05        SUB              SL, SP, #USR_Stack_Size
  225 00000194         
  226 00000194                 ENDIF
  227 00000194         
  228 00000194         ; Enter the C code -------------------------------------
                       ------------------------
  229 00000194         
  230 00000194         
  231 00000194                 IMPORT           systemInit
  232 00000194 E59F000C        LDR              R0, =systemInit
  233 00000198 E12FFF30        BLX              R0
  234 0000019C         
  235 0000019C                 IMPORT           __main
  236 0000019C E59F0008        LDR              R0, =__main
  237 000001A0 E12FFF10        BX               R0
  238 000001A4         
  239 000001A4         
  240 000001A4         
  241 000001A4                 IF               :DEF:__MICROLIB
  247 000001A4         ; User Initial Stack & Heap
  248 000001A4 00000000 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  249 00000000         
  250 00000000                 IMPORT           __use_two_region_memory
  251 00000000                 EXPORT           __user_initial_stackheap
  252 00000000         __user_initial_stackheap
  253 00000000         
  254 00000000 E59F000C        LDR              R0, =  Heap_Mem
  255 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  256 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  257 0000000C E59F3008        LDR              R3, = Stack_Mem
  258 00000010 E12FFF1E        BX               LR
  259 00000014                 ENDIF
  260 00000014         
  261 00000014         
  262 00000014                 END



ARM Macro Assembler    Page 7 


              00000000 
              00001400 
              00000000 
Command Line: --debug --xref --cpu=Cortex-R4F --bi --apcs=interwork --depend=.\
debug\startup_TMS570LS.d -o.\debug\startup_TMS570LS.o -Id:\Keil\ARM\RV31\Inc -I
d:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\TI --list=.\debug\startup_TMS570LS.
lst ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 51 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 53 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 255 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 257 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

Stack_Top 00001488

Symbol: Stack_Top
   Definitions
      At line 55 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 165 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Stack_Top used once
__initial_sp 00001400

Symbol: __initial_sp
   Definitions
      At line 54 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 64 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 66 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 254 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 256 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 65 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 67 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 102 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 93 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 112 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 102 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 112 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 105 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: FIQ_Addr unused
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 114 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 105 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 114 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 104 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 113 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 104 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 113 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 101 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 92 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: PAbt_Addr used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 111 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 101 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 111 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 77 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 98 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 89 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 120 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 98 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 119 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 100 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 91 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 109 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 100 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 109 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 99 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 90 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Undef_Addr used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 107 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 99 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 107 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 89 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: Vectors unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 248 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 252 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 251 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 43 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 181 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

E_Bit 00000200

Symbol: E_Bit
   Definitions
      At line 29 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 168 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 176 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 184 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 197 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 205 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 213 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 44 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 194 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 28 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 168 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 176 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 184 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 197 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 205 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 62 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 66 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 256 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 45 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 202 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

ISR_Stack_Size 00000088

Symbol: ISR_Stack_Size
   Definitions
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 54 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 27 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 168 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 176 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 184 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 197 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 205 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 23 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 176 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 20 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 184 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 21 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 197 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 22 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 205 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 25 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 213 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_SYS used once
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 24 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 168 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 19 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: Mode_USR unused
SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 42 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 210 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 41 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 49 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 173 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

USR_Stack_Size 00001400

Symbol: USR_Stack_Size
   Definitions
      At line 46 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 53 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 224 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
      At line 255 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 235 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 236 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 250 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      None
Comment: __use_two_region_memory unused
systemInit 00000000

Symbol: systemInit
   Definitions
      At line 231 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
   Uses
      At line 232 in file ..\..\DeviceSupport\ARM\MDK\Source\startup_TMS570LS.s
Comment: systemInit used once
3 symbols
390 symbols in table
